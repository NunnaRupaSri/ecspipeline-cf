AWSTemplateFormatVersion: '2010-09-09'
Description: AWS CloudFormation template to create a CodePipeline for an ECS deployment.

Parameters:
  GitHubOwner:
    Type: String
    Description: The owner of the GitHub repository (e.g., your-github-user).
  GitHubRepo:
    Type: String
    Description: The name of the GitHub repository.
  GitHubBranch:
    Type: String
    Default: main
    Description: The name of the repository branch to monitor.
  CodeStarConnectionArn:
    Type: String
    Description: The ARN of the CodeStar Connection to GitHub.
  ContainerName:
    Type: String
    Description: The name of the container in the ECS task definition.
  ECRRepoName:
    Type: String
    Description: The name of the Amazon ECR repository.
  ArtifactBucketName:
    Type: String
    Description: The S3 bucket to store pipeline artifacts.

Resources:
  # IAM Roles
  CodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:*'
                  - 'cloudformation:*'
                  - 'iam:PassRole'
                  - 'codedeploy:*'
                  - 'codestar-connections:UseConnection'
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                  - 'ecs:*'
                Resource: '*'

  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${AWS::StackName}-CodeBuildProject'
      Description: CodeBuild project for building and pushing the Docker image.
      ServiceRole: !GetAtt CodePipelineServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: 'aws/codebuild/standard:7.0'
        Type: LINUX_CONTAINER
        PrivilegedMode: true
      Source:
        Type: CODEPIPELINE
      Tags:
        - Key: project
          Value: !Ref AWS::StackName

  CodeDeployApplication:
    Type: AWS::CodeDeploy::Application
    Properties:
      ApplicationName: !Sub '${AWS::StackName}-CodeDeployApplication'
      ComputePlatform: ECS
      Tags:
        - Key: project
          Value: !Ref AWS::StackName

  CodeDeployDeploymentGroup:
    Type: AWS::CodeDeploy::DeploymentGroup
    DependsOn: CodeDeployApplication
    Properties:
      ApplicationName: !Ref CodeDeployApplication
      DeploymentGroupName: !Sub '${AWS::StackName}-CodeDeployDeploymentGroup'
      DeploymentConfigName: CodeDeployDefault.ECSAllAtOnce # Can be changed for canary/linear
      ServiceRoleArn: !GetAtt CodePipelineServiceRole.Arn
      DeploymentStyle:
        DeploymentOption: WITH_TRAFFIC_CONTROL
        DeploymentType: BLUE_GREEN
      EcsServices:
        - ClusterName: !ImportValue 'ECS-Cluster' # Assumes an existing ECS cluster CF stack
          ServiceName: !ImportValue 'ECS-Service' # Assumes an existing ECS service CF stack
      Tags:
        - Key: project
          Value: !Ref AWS::StackName

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub '${AWS::StackName}-CodePipeline'
      RoleArn: !GetAtt CodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: '1'
              RunOrder: 1
              Configuration:
                ConnectionArn: !Ref CodeStarConnectionArn
                FullRepositoryId: !Sub '${GitHubOwner}/${GitHubRepo}'
                BranchName: !Ref GitHubBranch
                OutputArtifactFormat: CODEPIPELINE_JSON
              OutputArtifacts:
                - Name: SourceArtifact
        - Name: Build
          Actions:
            - Name: BuildAndPush
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: '1'
              RunOrder: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
        - Name: Deploy
          Actions:
            - Name: DeployToECS
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CodeDeployToECS
                Version: '1'
              RunOrder: 1
              Configuration:
                ApplicationName: !Ref CodeDeployApplication
                DeploymentGroupName: !Ref CodeDeployDeploymentGroup
                ImageDefinitions: BuildArtifact::imagedefinitions.json
              InputArtifacts:
                - Name: BuildArtifact
      Tags:
        - Key: project
          Value: !Ref AWS::StackName

Outputs:
  CodePipelineName:
    Description: The name of the created CodePipeline.
    Value: !Ref Pipeline
  CodeDeployApplicationName:
    Description: The name of the CodeDeploy application.
    Value: !Ref CodeDeployApplication
