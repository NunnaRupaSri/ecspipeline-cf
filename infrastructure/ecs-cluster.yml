AWSTemplateVersion: '2010-09-09'
Description: Provisions ECS cluster, service, and load balancer.

Parameters:
  ProjectName: { Type: String, Default: 'ecs-static-app' }
  VpcId: { Type: AWS::EC2::VPC::Id }
  Subnets: { Type: 'List<AWS::EC2::Subnet::Id>' }
  ContainerName: { Type: String, Default: 'nginx-container' }
  EcrRepoName: { Type: String, Default: 'static-website' }

Resources:
  VpcSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-SG'
      GroupDescription: Enable HTTP access on port 80.
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  
  EcsCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub '${ProjectName}-cluster'

  Alb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${ProjectName}-alb'
      Scheme: internet-facing
      Subnets: !Ref Subnets

  AlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: fixed-response
          FixedResponseConfig: { ContentType: 'text/plain', MessageBody: 'Placeholder', StatusCode: '200' }
      LoadBalancerArn: !Ref Alb
      Port: 80
      Protocol: HTTP

  AlbTargetGroupBlue:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${ProjectName}-tg-blue'
      Port: 80
      Protocol: HTTP
      VpcId: !Ref VpcId
      TargetType: ip

  EcsTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub '${ProjectName}-task-definition'
      RequiresCompatibilities: [FARGATE]
      NetworkMode: awsvpc
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: !ImportValue 'EcsTaskExecutionRoleArn'
      TaskRoleArn: !ImportValue 'EcsTaskRoleArn'
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${EcrRepoName}:latest'
          PortMappings:
            - ContainerPort: 80
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: '/ecs/static-website'
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: 'ecs'

  EcsService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub '${ProjectName}-service'
      Cluster: !Ref EcsCluster
      DeploymentController: { Type: 'CODE_DEPLOY' }
      LaunchType: FARGATE
      TaskDefinition: !Ref EcsTaskDefinition
      DesiredCount: 1
      LoadBalancers:
        - ContainerName: !Ref ContainerName
          ContainerPort: 80
          TargetGroupArn: !Ref AlbTargetGroupBlue
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref Subnets
          AssignPublicIp: ENABLED
          SecurityGroups: [!Ref VpcSecurityGroup]

Outputs:
  ECSClusterName: { Value: !Ref EcsCluster, Export: { Name: 'ECSClusterName' } }
  ECSServiceName: { Value: !Ref EcsService, Export: { Name: 'ECSServiceName' } }
  ALBListenerArn: { Value: !Ref AlbListener, Export: { Name: 'ALBListenerArn' } }
